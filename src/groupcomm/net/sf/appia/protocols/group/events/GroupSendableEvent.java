/**
 * Appia: Group communication and protocol composition framework library
 * Copyright 2006 University of Lisbon
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 *
 * Initial developer(s): Alexandre Pinto and Hugo Miranda.
 * Contributor(s): See Appia web page for a list of contributors.
 */
 
package net.sf.appia.protocols.group.events;

import net.sf.appia.core.AppiaEventException;
import net.sf.appia.core.Channel;
import net.sf.appia.core.Session;
import net.sf.appia.core.events.SendableEvent;
import net.sf.appia.core.message.Message;
import net.sf.appia.protocols.group.Group;
import net.sf.appia.protocols.group.ViewID;



/**
 * Superclass of all {@link net.sf.appia.core.Event Events} generated by the
 * <i>Group Communication protocols</i> that will be sent through the
 * underlying network.
 * <br>
 * The meaning of the
 * {@link net.sf.appia.core.events.SendableEvent#source source} and
 * {@link net.sf.appia.core.events.SendableEvent#dest dest} attributes is a little
 * different.
 * <ul>
 * <li>{@link net.sf.appia.core.events.SendableEvent#dest dest} is meaningfull only if the
 * Event implements {@link net.sf.appia.protocols.group.events.Send Send} and is
 * descending ({@link net.sf.appia.core.Direction direction}=={@link net.sf.appia.core.Direction#DOWN}).
 * In that case it contains an array with the <i>ranks</i> of the destinataries.
 * <li>{@link net.sf.appia.core.events.SendableEvent#source source} is meaningfull only if
 * the Event is ascending
 * ({@link net.sf.appia.core.Direction direction}=={@link net.sf.appia.core.Direction#UP}).
 * In that case it contains the {@link net.sf.appia.protocols.group.Endpt Endpt} of the
 * sender.
 * </ul>
 * It extends the regular {@link net.sf.appia.core.events.SendableEvent SendableEvent}
 * by adding the {@link net.sf.appia.protocols.group.Group group id} and the
 * {@link net.sf.appia.protocols.group.ViewID view id}.
 * <b>These attributes are mandatory</b>.
 * <br>
 * It also adds an
 * {@link net.sf.appia.protocols.group.events.GroupSendableEvent#orig origin attribute}
 * only meaningfull in ascending Events, that contains the <i>rank</i> of the
 * sender.
 * <b>The attribute is mandatory</b>
 * <br>
 * <br>
 * <b>NOTICE:</b> if you invert a descending <i>GroupSendableEvent</i>, ie it
 * becomes ascending, you must set the <b>source</b> and <b>orig</b> attributes.
 *
 * @author Alexandre Pinto
 * @version 0.1
 * @see net.sf.appia.protocols.group.events.Send
 * @see net.sf.appia.protocols.group.events.GroupEvent
 * @see net.sf.appia.core.events.SendableEvent
 */
public class GroupSendableEvent extends SendableEvent {

  /**
   * The {@link net.sf.appia.protocols.group.Group group} to wich it belongs
   */
  public Group group;
  /**
   * The {@link net.sf.appia.protocols.group.ViewID view id} on wich the Event was
   * generated.
   */
  public ViewID view_id;
  /**
   * The <i>rank</i> of the sender.
   * <br>
   * It is meaningfull only in ascending Events.
   */
  public int orig;

  /**
   * Constructs an initialized <i>GroupSendableEvent</i> belonging to the given
   * {@link net.sf.appia.protocols.group.Group group} and
   * {@link net.sf.appia.protocols.group.ViewID view id}.
   *
   * @param channel the {@link net.sf.appia.core.Channel Channel} of the Event
   * @param dir the {@link net.sf.appia.core.Direction Direction} of the Event
   * @param source the {@link net.sf.appia.core.Session Session} that is generating the Event
   * @param group the {@link net.sf.appia.protocols.group.Group Group} of the Event
   * @param view_id the {@link net.sf.appia.protocols.group.ViewID ViewID} of the Event
   * @throws AppiaEventException as the result of calling
   * {@link net.sf.appia.core.events.SendableEvent#SendableEvent(Channel,int,Session)
   * SendableEvent(Channel,int,Session)}
   */
  public GroupSendableEvent(
          Channel channel, int dir, Session source,
          Group group, ViewID view_id)
    throws AppiaEventException {

    super(channel,dir,source,new Message());
    this.group=group;
    this.view_id=view_id;
  }

  /**
   * Constructs an uninitialized <i>GroupSendableEvent</i>.
   */
  public GroupSendableEvent() {
    super(new Message());
  }

  /**
   * Constructs an initialized <i>GroupSendableEvent</i> belonging to the given
   * {@link net.sf.appia.protocols.group.Group group} and
   * {@link net.sf.appia.protocols.group.ViewID view id}, and with the given
   * {@link net.sf.appia.core.message.Message message}.
   *
   * @param channel the {@link net.sf.appia.core.Channel Channel} of the Event
   * @param dir the {@link net.sf.appia.core.Direction Direction} of the Event
   * @param source the {@link net.sf.appia.core.Session Session} that is generating the Event
   * @param group the {@link net.sf.appia.protocols.group.Group Group} of the Event
   * @param view_id the {@link net.sf.appia.protocols.group.ViewID ViewID} of the Event
   * @param omsg the
   * {@link net.sf.appia.core.message.Message Message} of the
   * Event
   * @throws AppiaEventException as the result of calling
   * {@link net.sf.appia.core.events.SendableEvent#SendableEvent(Channel,int,Session)
   * SendableEvent(Channel,int,Session)}
   *
   * @see net.sf.appia.core.message.Message
   */
  public GroupSendableEvent(
          Channel channel, int dir, Session source,
          Group group, ViewID view_id,
          Message omsg)
    throws AppiaEventException {

    super(channel,dir,source,omsg);
    this.group=group;
    this.view_id=view_id;
  }

  /**
   * Constructs an uninitialized <i>GroupSendableEvent</i>, with the given
   * {@link net.sf.appia.core.message.Message message}.
   *
   * @param omsg the
   * {@link net.sf.appia.core.message.Message Message} of the
   * Event
   *
   * @see net.sf.appia.core.message.Message
   */
  public GroupSendableEvent(Message omsg) {
    super(omsg);
  }

  /**
   * Set the given
   * {@link net.sf.appia.core.message.Message Message} as the
   * {@link net.sf.appia.core.events.SendableEvent#message message} of the Event.
   *
   * @param omsg the new
   * {@link net.sf.appia.core.message.Message Message}
   */
  public void setObjectsMessage(Message omsg) {
    message=omsg;
  }

}